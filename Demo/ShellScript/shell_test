
#!/bin/bash  指定解释器程序
# echo       用来输出内容
# readonly   只读变量（将变量定义为只读变量，其值不能被改变  错误提示：-bash: myurl: readonly variable）
# unset      删除变量（不能删除 只读变量）


# 变量

# 定义变量
# 1、变量名和等号之间不能有空格（如果有空格 就相当于 执行命令了，如 myname = "jolon" 就是用 myname 命令执行 后面的语句）
# 2、命名只能使用英文字母，数字和下划线，首个字符不能以数字开头（不需要带 $ 符号）
# 3、不能使用标点符号和shell保留的关键字


# 变量赋值方式
# 1、显示赋值（用 = 符号）
# 2、语句给变量赋值（for ）


# 变量类型
# 1、局部变量（仅在当前脚本中有效）
# 2、环境变量（所有程序都能访问）
# 3、shell变量（shell程序特殊的变量，可能是局部变量也可能是环境变量）


# 使用变量
# 变量名 前面加上  $ 符号即可
# 推荐给所有变量加上花括号，这是个好的编程习惯

# 注意：定义变量、重新赋值、改变只读、删除变量  都不能带 $ 符号，只有使用的时候才能加 $ 符号。




# 字符串：字符串是shell编程中最常用最有用的数据类型，字符串可以用单引号，也可以用双引号，也可以不用引号。
        单引号里面不能解释变量和转义字符，双引号可以解释变量和转义字符

# 字符串函数
# echo ${#string}  获取字符串的长度
# echo ${string:1:4}  截取字符串，从第2个字符开始截取4个字符
# echo `expr index "$string" io`  查找字符串，查找 i 或 o 的位置


# 数组：bash 只支持一维数组，不支持多维数据。不限定数组的大小，数组元素下标从0开始计数。

# 数组函数
# echo ${array_name[2]}     读取数组的索引为2 的元素
# echo ${array_name[@]}     读取数组的所有元素
# echo ${#array_name[@]}    计算数组元素的个数
# echo ${#array_name[n]}    计算数组指定元素的长度（类似于字符串的长度）


# 注释
# 1、单行注释：以 # 开头的行就是注释，会被解释器忽略。
# 2、多行注释：以 :<<EOF  或 :<<' 开头来包括代码达到注释的目的。



myName = "jolon"; #错误

myName="jolon";

echo $myName
echo "My name is $myNametest";
echo "My name is ${myName}test"